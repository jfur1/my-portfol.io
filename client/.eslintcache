[{"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/index.js":"1","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/App.js":"2","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/getData.jsx":"3","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/splash.jsx":"4","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/register.jsx":"5","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/login.jsx":"6","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/home.jsx":"7"},{"size":324,"mtime":1611282333600,"results":"8","hashOfConfig":"9"},{"size":1256,"mtime":1611433627869,"results":"10","hashOfConfig":"9"},{"size":1745,"mtime":1611438280952,"results":"11","hashOfConfig":"9"},{"size":789,"mtime":1611434588110,"results":"12","hashOfConfig":"9"},{"size":7409,"mtime":1611439741112,"results":"13","hashOfConfig":"9"},{"size":4230,"mtime":1611441155119,"results":"14","hashOfConfig":"9"},{"size":1110,"mtime":1611438279421,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1be1bhd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/index.js",[],["34","35"],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/App.js",["36","37"],"import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Components\nimport Splash from \"./views/splash\";\nimport UsersTable from './views/getData';\nimport newUser from \"./views/register\";\nimport Home from './views/home';\nimport Login from './views/login';\n\nclass App extends Component {\n  render() {\n    const App = () => (\n      <>\n        {/* React Switch: Finds the first path to match our current URI and renders associated component */}\n        <Switch>\n          <Route exact path='/' component={Splash} />\n          <Route path='/getData' component={UsersTable} />\n          <Route path = '/register' component={newUser} />\n          <Route path = '/home' component={Home} />\n          <Route path = '/login' component={Login} />\n          \n          {/* <Route path = '/test' >\n            <Redirect to=\"/register\" />\n          </Route> */}\n          \n          {/* Catch-All Method: Undefined Routes Render the Home Componenet */}\n          <Route path=\"*\" component={Home} />\n        </Switch>\n      </>\n    )\n    return (\n      <Switch>\n        <App/>\n      </Switch>\n    );\n  }\n}\n\nexport default App;","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/getData.jsx",["38"],"import React, { Component } from 'react';\nimport FlashMessage from 'react-flash-message';\n\nclass UsersTable extends Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n  }\n\n    // Retrieves the list of items from the Express app\n    getList = () => {\n        fetch('http://localhost:5000/getData')\n        .then(function(response){\n            return response.json();\n        })\n        .then(list => this.setState({ list }))\n    }\n\n  render() {\n    const { list } = this.state;\n    console.log(\"List: \", list);\n\n    return (\n      <div className=\"App\">\n        <a href=\"/home\"><img className=\"logostyle\" src=\"/mp-logo.png\" alt=\"logo\"/></a>\n        <h1>List of Items</h1>\n        {/* Check to see if any items are found*/}\n        {list.length ? (\n          <div>\n            {/* Render the list of items */}\n            <table className=\"center\">\n              <tbody>\n            {list.map((sublist, idx) => {\n              return(\n                // <div key={idx}>\n                    <tr key={idx}>\n                      <th>{sublist.user_id}</th>\n                      <th>{sublist.first_name}  {sublist.last_name}</th>\n                      <th>{sublist.email}</th>\n                    </tr>\n                // </div>\n              );\n            })}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div>\n            {/* Comment Out: Avoids the temporary \"No items found\" img upon our initial render (looks smoother).\n            <h2>No List Items Found</h2> */}\n          </div>\n        )\n      }\n      </div>\n    );\n  }\n}\n\nexport default UsersTable;","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/splash.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/register.jsx",["39"],"import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Route, Redirect } from 'react-router-dom';\n\nclass newUser extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            firstname: \"\",\n            lastname: \"\",\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirmpassword: \"\",\n            hidden: true,\n            redirect: null,\n            errors: {}\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleInputChange(event){\n        const target = event.target;\n        if(target.type === 'checkbox'){\n            this.setState({ hidden: !this.state.hidden });\n        }\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n    handleSubmit(event){\n        //where connection to database should be established\n        event.preventDefault();\n        if(this.validate()){\n            console.log(this.state);\n            const data = { firstname: this.state.firstname, lastname: this.state.lastname, username: this.state.username, email: this.state.email, password: this.state.password};\n            console.log(data);\n            fetch('http://localhost:5000/newUser', {\n                method: 'POST', // or 'PUT'\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                this.setState({redirect: '/login'});\n                return;\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n        }\n    }\n\n    validate(){\n        let errors = {};\n        let isValid = true;\n    \n        if (!this.state.firstname) {\n          isValid = false;\n          errors[\"firstname\"] = \"Please enter your first name.\";\n        }\n        if (!this.state.lastname) {\n            isValid = false;\n            errors[\"lastname\"] = \"Please enter your last name.\";\n          }\n        if (!this.state.email) {\n          isValid = false;\n          errors[\"email\"] = \"Please enter your email Address.\";\n        }\n        if (typeof this.state.email !== \"undefined\") {\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n          if (!pattern.test(this.state.email)) {\n            isValid = false;\n            errors[\"email\"] = \"Please enter valid email address.\";\n          }\n        }\n        if (!this.state.password) {\n          isValid = false;\n          errors[\"password\"] = \"Please enter your password.\";\n        }\n        if (!this.state.confirmpassword) {\n          isValid = false;\n          errors[\"confirm_password\"] = \"Please enter your confirm password.\";\n        }\n        if (typeof this.state.password !== \"undefined\" && typeof this.state.confirmpassword !== \"undefined\") {\n            \n          if (this.state.password !== this.state.confirmpassword) {\n            isValid = false;\n            errors[\"passwordmatch\"] = \"Passwords don't match.\";\n          }\n        } \n        this.setState({errors: errors});\n        return isValid;\n    }\n\n\n    render(){\n        if(this.state.redirect){\n            return (\n                <Redirect \n                    to={{\n                        pathname: this.state.redirect,\n                        state: 'You are now registered and can login to your account!'\n                    }} \n                />\n            );\n        }\n        else{\n            return(\n                <div className=\"container\">\n                    <a href=\"/home\"><img className=\"logostyle\" src=\"/mp-logo.png\" alt=\"logo\"/></a>\n                    <div className=\"card-container\">\n                    <Card style={{width: '35rem'}}>\n                        <Card.Body>\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter First Name\"name=\"firstname\" value={this.state.firstname} onChange={this.handleInputChange}/>\n                                    <div className=\"text-danger\">{this.state.errors.firstname}</div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Last Name\" name=\"lastname\" value={this.state.lastname} onChange={this.handleInputChange}/>\n                                    <div className=\"text-danger\">{this.state.errors.lastname}</div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.handleInputChange}/>\n                                    <div className=\"text-danger\">{this.state.errors.username}</div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}/>\n                                    <div className=\"text-danger\">{this.state.errors.email}</div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type={this.state.hidden ? 'password' : 'text'} className=\"form-control\" placeholder=\"Enter Password\" name=\"password\" value={this.state.password} id=\"password\" onChange={this.handleInputChange} />\n                                    <div className=\"text-danger\">{this.state.errors.password}</div>\n                                    <input type=\"checkbox\" onChange={this.handleInputChange}/> Show Password\n                                    <br/>\n                                    <input type={this.state.hidden ? 'password' : 'text'} className=\"form-control\" placeholder=\"Confirm Password\" name=\"confirmpassword\" value={this.state.confirmpassword} id=\"confirmpassword\" onChange={this.handleInputChange} />\n                                    <div className=\"text-danger\">{this.state.errors.confirmpassword}</div>\n                                    <div className=\"text-danger\">{this.state.errors.passwordmatch}</div>\n                                </div>\n                                <div className=\"form-group\">\n                                <input className=\"btn btn-dark btn-lg btn-block\" type=\"submit\" \n                                value=\"Register\"/>\n                                </div>\n                            </form>\n                        </Card.Body>\n                    </Card>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default newUser;","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/login.jsx",["40","41"],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/home.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":20,"nodeType":"48","messageId":"49","endLine":4,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":7,"column":3,"nodeType":"48","messageId":"49","endLine":7,"endColumn":7},{"ruleId":"46","severity":1,"message":"51","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":20},{"ruleId":"46","severity":1,"message":"52","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":15},{"ruleId":"46","severity":1,"message":"53","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":20},{"ruleId":"46","severity":1,"message":"54","line":4,"column":17,"nodeType":"48","messageId":"49","endLine":4,"endColumn":27},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'FlashMessage' is defined but never used.","'Route' is defined but never used.","'makeStyles' is defined but never used.","'AlertTitle' is defined but never used.","no-global-assign","no-unsafe-negation"]