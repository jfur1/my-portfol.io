[{"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/index.js":"1","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/App.js":"2","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/login.jsx":"3","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/oldCode/getData.jsx":"4","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/register.jsx":"5","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/welcome.jsx":"6","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/protectedRoute.jsx":"7","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/auth.jsx":"8","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/alerts.jsx":"9","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/useToggle.jsx":"10","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/registerUser.jsx":"11","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/getPosts.jsx":"12","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/createPost.jsx":"13","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/validateRegistration.jsx":"14","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/post.jsx":"15","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/profile.jsx":"16","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/oldCode/dashboard.jsx":"17"},{"size":313,"mtime":1611621633769,"results":"18","hashOfConfig":"19"},{"size":939,"mtime":1611946121030,"results":"20","hashOfConfig":"19"},{"size":2966,"mtime":1611894707081,"results":"21","hashOfConfig":"19"},{"size":1800,"mtime":1611896800982,"results":"22","hashOfConfig":"19"},{"size":4140,"mtime":1611897902268,"results":"23","hashOfConfig":"19"},{"size":1075,"mtime":1611897951244,"results":"24","hashOfConfig":"19"},{"size":741,"mtime":1611878409741,"results":"25","hashOfConfig":"19"},{"size":1746,"mtime":1611881867467,"results":"26","hashOfConfig":"19"},{"size":399,"mtime":1611698579877,"results":"27","hashOfConfig":"19"},{"size":238,"mtime":1611621633768,"results":"28","hashOfConfig":"19"},{"size":1516,"mtime":1611774690629,"results":"29","hashOfConfig":"19"},{"size":1658,"mtime":1611940054305,"results":"30","hashOfConfig":"19"},{"size":830,"mtime":1611943965770,"results":"31","hashOfConfig":"19"},{"size":1398,"mtime":1611691497691,"results":"32","hashOfConfig":"19"},{"size":832,"mtime":1611945946585,"results":"33","hashOfConfig":"19"},{"size":4758,"mtime":1611946054417,"results":"34","hashOfConfig":"19"},{"size":3599,"mtime":1611946121736,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1be1bhd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/index.js",[],["73","74"],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/App.js",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/login.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/oldCode/getData.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/register.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/welcome.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/protectedRoute.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/auth.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/alerts.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/useToggle.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/registerUser.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/getPosts.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/createPost.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/components/validateRegistration.jsx",[],["75","76"],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/post.jsx",[],"/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/views/profile.jsx",["77","78"],"import React, { useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport { createPost } from '../components/createPost';\nimport { Post } from '../views/post';\n\nexport const Profile = props => {\n    const [newPost, setNewPost] = useState(\"\");\n    const [user, setUser] = useState(props.location.state);\n    const [postsList, setPostsList] = useState(\"\");\n\n    // Retrieves the list of items from the Express app\n    const getPosts = async () => {\n        fetch('http://localhost:5000/getPosts',{\n          method: 'GET',\n          mode: 'cors',\n          credentials: 'include',\n          withCredentials: true,\n        })\n        .then(response => {\n          console.log(\"Get Posts Response: \", response);\n          return response.json();\n        })\n        .then(list => {setPostsList(list)\n        })\n    }\n\n    useEffect(() => {\n        getPosts();\n        console.log(\"Posts: \", postsList);\n        return () => {}\n    }, []);\n\n\n    return (\n        <>\n            <div className=\"card-container\">\n                \n                <div className=\"profile-container\">\n                <Card>\n                    <Card.Body>\n\n                        <img className=\"logostyle\" src=\"/mp-logo.png\" alt=\"logo\"/>\n\n                        <br></br>\n                        <Card.Title><b>Protected</b> Profile</Card.Title>\n                        <br></br>\n\n                        <h3>Welcome {user.firstname} {user.lastname} </h3>\n                        <br></br>\n                        <p><b>Username:</b> {user.username}</p>\n                        <p><b>Email: </b>{user.email}</p>\n                        <br></br>\n                        \n                        <button className=\"btn btn-primary btn-lg btn-block\" onClick={() => {\n                            props.history.push({\n                                pathname: \"/getData\",\n                                state: {auth: true}\n                            });\n                        }}> View All Users </button>\n\n                        <button className=\"btn btn-danger btn-lg btn-block\" onClick={() => {\n                            auth.logout(() => {\n                                props.history.push({\n                                    pathname:\"/login\",\n                                    state: {loggedOut: true}\n                                });\n                            });\n                        }}> Logout</button>\n\n                    </Card.Body>\n                </Card>\n                </div>\n            </div>\n            \n            <div className=\"card-container\">\n                <div className=\"user-posts-container\">\n                    <Card>\n                        <Card.Body>\n                            <Card.Title><h3>New Post</h3></Card.Title>\n\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"What's on your mind?\" name=\"newPost\" id=\"newPost\" onChange={e => setNewPost(e.target.value)}/>\n                            </div>\n                            <button className=\"btn btn-success btn-md btn-block\" onClick={() => {\n                                createPost({newPost}, user, (res) => {\n                                    window.location.reload();\n                                })\n                            }}> Add New Post</button>\n                        </Card.Body>\n                    </Card>\n\n                    <div className=\"post-list-container\">\n                        <Card>\n                            <Card.Body>\n                                <h3>Your Posts:</h3>\n                                <div className=\"posts\">\n\n                                {postsList.length ? (\n                                    <div>\n                                        {postsList.map((sublist, idx) => {\n                                        return(\n                                            <Post data={sublist} key={idx}/>\n                                        );\n                                    })}\n                                    </div>\n                                ) : (\n                                <div>\n                                    {/* Comment Out: Avoids the temporary \"No items found\" img upon our initial render (looks smoother).*/}\n                                    <h2>No Posts Found</h2>\n                                </div>\n                                )\n                                }\n                                </div>\n                                  \n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}","/Users/johnfurlong/Documents/code/Projects/my-portfol.io/mp-app/client/src/oldCode/dashboard.jsx",["79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":9,"column":18,"nodeType":"88","messageId":"89","endLine":9,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":32,"column":8,"nodeType":"92","endLine":32,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":2,"message":"95","line":83,"column":34,"nodeType":"96","endLine":83,"endColumn":50},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postsList'. Either include it or remove the dependency array.","ArrayExpression",["99"],"react/jsx-no-undef","'TestGetPostsList' is not defined.","JSXIdentifier","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [postsList]",{"range":"102","text":"103"},[993,995],"[postsList]"]